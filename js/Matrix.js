// Generated by CoffeeScript 1.6.1
(function() {
  var $M, $V, Matrix, ScaleMatrix, Sylvester, Vector,
    _this = this;

  Sylvester = require("./vendor/sylvester-0.2.0.js");

  $V = Sylvester.Vector;

  $M = Sylvester.Matrix;

  Matrix = (function() {

    function Matrix(array) {
      this.matrix = $M.create([[array[0][0], array[0][1], array[0][2]], [array[1][0], array[1][1], array[1][2]], [array[2][0], array[2][1], array[2][2]]]);
    }

    return Matrix;

  })();

  Vector = (function() {

    Vector.fromVector = function(vector) {
      return new Vector([vector.e(1), vector.e(2), vector.e(3)]);
    };

    function Vector(array) {
      var _this = this;
      this.toArray = function() {
        return Vector.prototype.toArray.apply(_this, arguments);
      };
      this.norm = function() {
        return Vector.prototype.norm.apply(_this, arguments);
      };
      this.vector = $V.create(array);
    }

    Vector.prototype.norm = function() {
      var unit;
      unit = this.vector.toUnitVector();
      return new Vector([unit.e(1), unit.e(2), unit.e(3)]);
    };

    Vector.prototype.toArray = function() {
      return [this.vector.e(1), this.vector.e(2), this.vector.e(3)];
    };

    return Vector;

  })();

  ScaleMatrix = (function() {

    function ScaleMatrix(array) {
      var _this = this;
      this.scaled = function(array) {
        return ScaleMatrix.prototype.scaled.apply(_this, arguments);
      };
      this.vector = new Vector(array);
      this.unit = this.vector.norm();
      this.scale = this.vector.vector.dot(this.unit.vector);
      this.matrix = $M.create([[1 / this.scale, 0, 0], [0, 1 / this.scale, 0], [0, 0, 1 / this.scale]]);
    }

    ScaleMatrix.prototype.scaled = function(array) {
      var scaled, vector;
      vector = new Vector(array);
      scaled = this.matrix.x(vector.vector);
      return Vector.fromVector(scaled).toArray();
    };

    return ScaleMatrix;

  })();

  module.exports = {
    Vector: Vector,
    Matrix: Matrix,
    ScaleMatrix: ScaleMatrix
  };

}).call(this);
