// Generated by CoffeeScript 1.6.1
(function() {
  var $M, $V, InitialRotator, Sylvester;

  Sylvester = require("./vendor/sylvester-0.2.0.js");

  $V = Sylvester.Vector;

  $M = Sylvester.Matrix;

  InitialRotator = (function() {
    var calcMatrix, d2r;

    function InitialRotator(accel) {
      this.accel = accel;
      this.gyro = [0, 0, 0];
      this.angle = [0, 0, 0];
      this.timeDelta = 0;
      this.matrix = calcMatrix.call(this);
    }

    InitialRotator.prototype.rotate = function(accel) {
      var accelVector, rotated;
      accelVector = $V.create(accel);
      rotated = this.matrix.x(accelVector);
      return [rotated.e(1), rotated.e(2), rotated.e(3)];
    };

    calcMatrix = function() {
      var g, rawY, xAxis, yAxis, zAxis, zRaw;
      g = $V.create(this.accel);
      zRaw = g.multiply(-1);
      zAxis = zRaw.toUnitVector();
      rawY = $V.create([0, zAxis.e(3), -1 * zAxis.e(2)]);
      yAxis = rawY.toUnitVector();
      xAxis = yAxis.cross(zAxis);
      return $M.create([[xAxis.e(1), xAxis.e(2), xAxis.e(3)], [yAxis.e(1), yAxis.e(2), yAxis.e(3)], [zAxis.e(1), zAxis.e(2), zAxis.e(3)]]);
    };

    d2r = function(deg) {
      return deg * Math.PI / 180;
    };

    return InitialRotator;

  })();

  module.exports = InitialRotator;

}).call(this);
