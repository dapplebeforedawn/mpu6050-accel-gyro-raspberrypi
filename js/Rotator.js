// Generated by CoffeeScript 1.6.1
(function() {
  var $M, $V, Rotator, Sylvester;

  Sylvester = require("./vendor/sylvester-0.2.0.js");

  $V = Sylvester.Vector;

  $M = Sylvester.Matrix;

  Rotator = (function() {
    var calcMatrix, d2r;

    function Rotator(lastRotation, gyroValues, timeDelta) {
      this.lastRotation = lastRotation;
      this.gyro = gyroValues;
      this.timeDelta = this.timeDelta;
      this.matrix = calcMatrix.call(this);
    }

    Rotator.prototype.rotate = function(accel) {
      var accelVector, rotated;
      accelVector = $V.create(accel);
      rotated = this.matirix.x(accelVector);
      return [rotated.e(1), rotated.e(2), rotated.e(3)];
    };

    d2r = function(deg) {
      return deg * Math.PI / 180;
    };

    calcMatrix = function() {
      var matrix, xRotation, yRotation, zRotation;
      xRotation = $M.RotationX(d2r(this.gyro[0]) * this.timeDelta);
      yRotation = $M.RotationY(d2r(this.gyro[1]) * this.timeDelta);
      zRotation = $M.RotationZ(d2r(this.gyro[2]) * this.timeDelta);
      matrix = this.lastRotation.matrix.x(xRotation);
      matrix = matrix.x(yRotation);
      return matrix = matrix.x(zRotation);
    };

    return Rotator;

  })();

  module.exports = Rotator;

}).call(this);
